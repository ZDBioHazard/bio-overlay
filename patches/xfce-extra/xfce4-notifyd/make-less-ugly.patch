--- xfce4-notifyd/xfce-notify-window.c
+++ xfce4-notifyd/xfce-notify-window.c
@@ -108,8 +108,6 @@
                                                   GdkEventButton *evt);
 static gboolean xfce_notify_window_configure_event(GtkWidget *widget,
                                                    GdkEventConfigure *evt);
-static void xfce_notify_window_style_set(GtkWidget *widget,
-                                         GtkStyle *previous_style);
 
 static gboolean xfce_notify_window_expire_timeout(gpointer data);
 static gboolean xfce_notify_window_fade_timeout(gpointer data);
@@ -138,7 +136,6 @@
     widget_class->leave_notify_event = xfce_notify_window_enter_leave;
     widget_class->button_release_event = xfce_notify_window_button_release;
     widget_class->configure_event = xfce_notify_window_configure_event;
-    widget_class->style_set = xfce_notify_window_style_set;
 
     signals[SIG_CLOSED] = g_signal_new("closed",
                                        XFCE_TYPE_NOTIFY_WINDOW,
@@ -181,12 +178,6 @@
                                                                 0.0, 8.0,
                                                                 DEFAULT_BORDER_WIDTH,
                                                                 G_PARAM_READABLE));
-    gtk_widget_class_install_style_property(widget_class,
-                                            g_param_spec_boolean("summary-bold",
-                                                                 "summary bold",
-                                                                 "whether or not to display the notification summary field in bold text",
-                                                                 FALSE,
-                                                                 G_PARAM_READABLE));
 }
 
 static void
@@ -199,9 +190,6 @@
     GTK_WINDOW(window)->type = GTK_WINDOW_TOPLEVEL;
     window->expire_timeout = DEFAULT_EXPIRE_TIMEOUT;
     window->normal_opacity = DEFAULT_NORMAL_OPACITY;
-    /* The summary widget needs to be initialized before style_set is called. gtk_widget_ensure_style calls style_set */
-    window->summary = gtk_label_new(NULL);
-
     gtk_window_set_keep_above(GTK_WINDOW(window), TRUE);
     gtk_window_stick(GTK_WINDOW(window));
     gtk_window_set_decorated(GTK_WINDOW(window), FALSE);
@@ -247,6 +235,7 @@
     gtk_widget_show(vbox);
     gtk_box_pack_start(GTK_BOX(tophbox), vbox, TRUE, TRUE, 0);
 
+    window->summary = gtk_label_new(NULL);
     gtk_label_set_line_wrap(GTK_LABEL(window->summary), TRUE);
     gtk_misc_set_alignment(GTK_MISC(window->summary), 0.0, 0.0);
     gtk_box_pack_start(GTK_BOX(vbox), window->summary, FALSE, FALSE, 0);
@@ -638,29 +627,6 @@
     return ret;
 }
 
-static void
-xfce_notify_window_style_set(GtkWidget *widget,
-                             GtkStyle *previous_style)
-{
-    XfceNotifyWindow *window = XFCE_NOTIFY_WINDOW(widget);
-    gboolean summary_bold = FALSE;
-    GtkStyle *style;
-    PangoFontDescription *pfd;
-
-    gtk_widget_style_get(widget,
-                         "summary-bold", &summary_bold,
-                         NULL);
-    if(summary_bold) {
-        style = gtk_widget_get_style(window->summary);
-        pfd = pango_font_description_copy(style->font_desc);
-        pango_font_description_set_weight(pfd, PANGO_WEIGHT_BOLD);
-        gtk_widget_modify_font(window->summary, pfd);
-        pango_font_description_free(pfd);
-    }
-}
-
-
-
 static gboolean
 xfce_notify_window_expire_timeout(gpointer data)
 {
@@ -952,11 +918,18 @@
 {
     g_return_if_fail(XFCE_IS_NOTIFY_WINDOW(window));
 
-    gtk_label_set_text(GTK_LABEL(window->summary), summary);
     if(summary && *summary) {
+        gchar *markup = g_markup_printf_escaped("<span size='large'><b>%s</b></span>", summary);
+        if(!markup)
+            return;
+
+        gtk_label_set_markup(GTK_LABEL(window->summary), markup);
+
         gtk_widget_show(window->summary);
+        g_free(markup);
         window->has_summary_text = TRUE;
     } else {
+        gtk_label_set_markup(GTK_LABEL(window->summary), "");
         gtk_widget_hide(window->summary);
         window->has_summary_text = FALSE;
     }
@@ -1049,6 +1022,8 @@
         GdkPixbuf *pix;
 
         gtk_icon_size_lookup(GTK_ICON_SIZE_DIALOG, &w, &h);
+        w *= 2;
+        h *= 2;
 
         if(g_path_is_absolute(icon_name))
           pix = gdk_pixbuf_new_from_file_at_size(icon_name, w, h, NULL);
@@ -1092,6 +1067,8 @@
         gint w, h, pw, ph;
 
         gtk_icon_size_lookup(GTK_ICON_SIZE_DIALOG, &w, &h);
+        w *= 2;
+        h *= 2;
         pw = gdk_pixbuf_get_width(pixbuf);
         ph = gdk_pixbuf_get_height(pixbuf);
 
@@ -1176,7 +1153,6 @@
         const gchar *cur_action_id = actions[i];
         const gchar *cur_button_text = actions[i+1];
         GtkWidget *btn, *lbl;
-        gchar *cur_button_text_escaped;
 
         if(!cur_button_text || !cur_action_id || !*cur_action_id)
             break;
@@ -1191,16 +1167,12 @@
                          G_CALLBACK(xfce_notify_window_button_clicked),
                          window);
 
-        cur_button_text_escaped = g_markup_printf_escaped("<span size='small'>%s</span>",
-                                                          cur_button_text);
-
         lbl = gtk_label_new(NULL);
-        gtk_label_set_markup(GTK_LABEL(lbl), cur_button_text_escaped);
+        gtk_label_set_markup(GTK_LABEL(lbl), cur_button_text);
         gtk_label_set_use_markup(GTK_LABEL(lbl), TRUE);
         gtk_widget_show(lbl);
         gtk_container_add(GTK_CONTAINER(btn), lbl);
 
-        g_free(cur_button_text_escaped);
     }
 
     if(window->bg_path) {
